
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002c0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000344  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000380  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f9  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071a  00000000  00000000  00000e21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000484  00000000  00000000  0000153b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000124  00000000  00000000  000019c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000488  00000000  00000000  00001ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000039d  00000000  00000000  00001f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002309  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ec       	ldi	r30, 0xC0	; 192
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 27 01 	call	0x24e	; 0x24e <main>
  7a:	0c 94 5e 01 	jmp	0x2bc	; 0x2bc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_voidSetPinDirection>:



void	DIO_voidSetPinDirection(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinDir)
{
	if(Copy_u8PinID>=PIN0&&Copy_u8PinID<=PIN7)
  82:	68 30       	cpi	r22, 0x08	; 8
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_voidSetPinDirection+0x6>
  86:	6f c0       	rjmp	.+222    	; 0x166 <DIO_voidSetPinDirection+0xe4>
	{
		if(Copy_u8PinDir==PIN_OUTPUT)//Output
  88:	41 30       	cpi	r20, 0x01	; 1
  8a:	a1 f5       	brne	.+104    	; 0xf4 <DIO_voidSetPinDirection+0x72>
		{
			switch(Copy_u8PortID)
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_voidSetPinDirection+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_voidSetPinDirection+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_voidSetPinDirection+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_voidSetPinDirection+0x5c>
  9a:	08 95       	ret
			{
			case PORTA_ID:    SET_BIT(DDRA_REG,Copy_u8PinID); break;
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_voidSetPinDirection+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_voidSetPinDirection+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
			case PORTB_ID:    SET_BIT(DDRB_REG,Copy_u8PinID); break;
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_voidSetPinDirection+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_voidSetPinDirection+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
			case PORTC_ID:    SET_BIT(DDRC_REG,Copy_u8PinID); break;
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_voidSetPinDirection+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_voidSetPinDirection+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
			case PORTD_ID:    SET_BIT(DDRD_REG,Copy_u8PinID); break;
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_voidSetPinDirection+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_voidSetPinDirection+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret

			default:   break;

			}
		}
		else if(Copy_u8PinDir==PIN_INPUT)//Input
  f4:	41 11       	cpse	r20, r1
  f6:	37 c0       	rjmp	.+110    	; 0x166 <DIO_voidSetPinDirection+0xe4>
		{
			switch(Copy_u8PortID)
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	91 f0       	breq	.+36     	; 0x120 <DIO_voidSetPinDirection+0x9e>
  fc:	28 f0       	brcs	.+10     	; 0x108 <DIO_voidSetPinDirection+0x86>
  fe:	82 30       	cpi	r24, 0x02	; 2
 100:	d9 f0       	breq	.+54     	; 0x138 <DIO_voidSetPinDirection+0xb6>
 102:	83 30       	cpi	r24, 0x03	; 3
 104:	29 f1       	breq	.+74     	; 0x150 <DIO_voidSetPinDirection+0xce>
 106:	08 95       	ret
			{
			case PORTA_ID:   CLR_BIT(DDRA_REG,Copy_u8PinID); break;
 108:	2a b3       	in	r18, 0x1a	; 26
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_voidSetPinDirection+0x92>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_voidSetPinDirection+0x8e>
 118:	80 95       	com	r24
 11a:	82 23       	and	r24, r18
 11c:	8a bb       	out	0x1a, r24	; 26
 11e:	08 95       	ret
			case PORTB_ID:   CLR_BIT(DDRB_REG,Copy_u8PinID); break;
 120:	27 b3       	in	r18, 0x17	; 23
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_voidSetPinDirection+0xaa>
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	6a 95       	dec	r22
 12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_voidSetPinDirection+0xa6>
 130:	80 95       	com	r24
 132:	82 23       	and	r24, r18
 134:	87 bb       	out	0x17, r24	; 23
 136:	08 95       	ret
			case PORTC_ID:   CLR_BIT(DDRC_REG,Copy_u8PinID); break;
 138:	24 b3       	in	r18, 0x14	; 20
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_voidSetPinDirection+0xc2>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_voidSetPinDirection+0xbe>
 148:	80 95       	com	r24
 14a:	82 23       	and	r24, r18
 14c:	84 bb       	out	0x14, r24	; 20
 14e:	08 95       	ret
			case PORTD_ID:   CLR_BIT(DDRD_REG,Copy_u8PinID); break;
 150:	21 b3       	in	r18, 0x11	; 17
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <DIO_voidSetPinDirection+0xda>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <DIO_voidSetPinDirection+0xd6>
 160:	80 95       	com	r24
 162:	82 23       	and	r24, r18
 164:	81 bb       	out	0x11, r24	; 17
 166:	08 95       	ret

00000168 <DIO_voidSetPinValue>:
	}

}
void    DIO_voidSetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinValue)
{
	if(Copy_u8PinID>=PIN0&&Copy_u8PinID<=PIN7)
 168:	68 30       	cpi	r22, 0x08	; 8
 16a:	08 f0       	brcs	.+2      	; 0x16e <DIO_voidSetPinValue+0x6>
 16c:	6f c0       	rjmp	.+222    	; 0x24c <DIO_voidSetPinValue+0xe4>
	{
		if(Copy_u8PinValue==PIN_HIGH)//High
 16e:	41 30       	cpi	r20, 0x01	; 1
 170:	a1 f5       	brne	.+104    	; 0x1da <DIO_voidSetPinValue+0x72>
		{

			switch(Copy_u8PortID)
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	89 f0       	breq	.+34     	; 0x198 <DIO_voidSetPinValue+0x30>
 176:	28 f0       	brcs	.+10     	; 0x182 <DIO_voidSetPinValue+0x1a>
 178:	82 30       	cpi	r24, 0x02	; 2
 17a:	c9 f0       	breq	.+50     	; 0x1ae <DIO_voidSetPinValue+0x46>
 17c:	83 30       	cpi	r24, 0x03	; 3
 17e:	11 f1       	breq	.+68     	; 0x1c4 <DIO_voidSetPinValue+0x5c>
 180:	08 95       	ret
			{
			case PORTA_ID :    SET_BIT(PORTA_REG,Copy_u8PinID); break;
 182:	2b b3       	in	r18, 0x1b	; 27
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_voidSetPinValue+0x26>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_voidSetPinValue+0x22>
 192:	82 2b       	or	r24, r18
 194:	8b bb       	out	0x1b, r24	; 27
 196:	08 95       	ret
			case PORTB_ID :    SET_BIT(PORTB_REG,Copy_u8PinID); break;
 198:	28 b3       	in	r18, 0x18	; 24
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_voidSetPinValue+0x3c>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_voidSetPinValue+0x38>
 1a8:	82 2b       	or	r24, r18
 1aa:	88 bb       	out	0x18, r24	; 24
 1ac:	08 95       	ret
			case PORTC_ID :    SET_BIT(PORTC_REG,Copy_u8PinID); break;
 1ae:	25 b3       	in	r18, 0x15	; 21
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_voidSetPinValue+0x52>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_voidSetPinValue+0x4e>
 1be:	82 2b       	or	r24, r18
 1c0:	85 bb       	out	0x15, r24	; 21
 1c2:	08 95       	ret
			case PORTD_ID :    SET_BIT(PORTD_REG,Copy_u8PinID); break;
 1c4:	22 b3       	in	r18, 0x12	; 18
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_voidSetPinValue+0x68>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_voidSetPinValue+0x64>
 1d4:	82 2b       	or	r24, r18
 1d6:	82 bb       	out	0x12, r24	; 18
 1d8:	08 95       	ret

			}
		}
		else if(Copy_u8PinValue==PIN_LOW)//Low
 1da:	41 11       	cpse	r20, r1
 1dc:	37 c0       	rjmp	.+110    	; 0x24c <DIO_voidSetPinValue+0xe4>
		{
			switch(Copy_u8PortID)
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 f0       	breq	.+36     	; 0x206 <DIO_voidSetPinValue+0x9e>
 1e2:	28 f0       	brcs	.+10     	; 0x1ee <DIO_voidSetPinValue+0x86>
 1e4:	82 30       	cpi	r24, 0x02	; 2
 1e6:	d9 f0       	breq	.+54     	; 0x21e <DIO_voidSetPinValue+0xb6>
 1e8:	83 30       	cpi	r24, 0x03	; 3
 1ea:	29 f1       	breq	.+74     	; 0x236 <DIO_voidSetPinValue+0xce>
 1ec:	08 95       	ret
			{
			case PORTA_ID : CLR_BIT(PORTA_REG,Copy_u8PinID); break ;
 1ee:	2b b3       	in	r18, 0x1b	; 27
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_voidSetPinValue+0x92>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_voidSetPinValue+0x8e>
 1fe:	80 95       	com	r24
 200:	82 23       	and	r24, r18
 202:	8b bb       	out	0x1b, r24	; 27
 204:	08 95       	ret
			case PORTB_ID : CLR_BIT(PORTB_REG,Copy_u8PinID); break ;
 206:	28 b3       	in	r18, 0x18	; 24
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_voidSetPinValue+0xaa>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_voidSetPinValue+0xa6>
 216:	80 95       	com	r24
 218:	82 23       	and	r24, r18
 21a:	88 bb       	out	0x18, r24	; 24
 21c:	08 95       	ret
			case PORTC_ID : CLR_BIT(PORTC_REG,Copy_u8PinID) ;break ;
 21e:	25 b3       	in	r18, 0x15	; 21
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <DIO_voidSetPinValue+0xc2>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	6a 95       	dec	r22
 22c:	e2 f7       	brpl	.-8      	; 0x226 <DIO_voidSetPinValue+0xbe>
 22e:	80 95       	com	r24
 230:	82 23       	and	r24, r18
 232:	85 bb       	out	0x15, r24	; 21
 234:	08 95       	ret
			case PORTD_ID : CLR_BIT(PORTD_REG,Copy_u8PinID) ;break ;
 236:	22 b3       	in	r18, 0x12	; 18
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_voidSetPinValue+0xda>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_voidSetPinValue+0xd6>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	82 bb       	out	0x12, r24	; 18
 24c:	08 95       	ret

0000024e <main>:
#include "DIO_interface.h"
#include "UART_interface.h"

int main()
{
	DIO_voidSetPinDirection(PORTC_ID, PIN7, PIN_OUTPUT);
 24e:	41 e0       	ldi	r20, 0x01	; 1
 250:	67 e0       	ldi	r22, 0x07	; 7
 252:	82 e0       	ldi	r24, 0x02	; 2
 254:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
	
	DIO_voidSetPinDirection(PORTD_ID,PIN0 , PIN_INPUT);
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	83 e0       	ldi	r24, 0x03	; 3
 25e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTD_ID, PIN1, PIN_OUTPUT);
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	61 e0       	ldi	r22, 0x01	; 1
 266:	83 e0       	ldi	r24, 0x03	; 3
 268:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDirection>
	
	UART_Init();
 26c:	0e 94 4c 01 	call	0x298	; 0x298 <UART_Init>
	
	while (1)
	{
		if(UART_Receive()=='1'){
 270:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <UART_Receive>
 274:	81 33       	cpi	r24, 0x31	; 49
 276:	31 f4       	brne	.+12     	; 0x284 <main+0x36>
			
			DIO_voidSetPinValue(PORTC_ID, PIN7, PIN_HIGH);
 278:	41 e0       	ldi	r20, 0x01	; 1
 27a:	67 e0       	ldi	r22, 0x07	; 7
 27c:	82 e0       	ldi	r24, 0x02	; 2
 27e:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 282:	f6 cf       	rjmp	.-20     	; 0x270 <main+0x22>
		}
		
		else if(UART_Receive()=='0') {
 284:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <UART_Receive>
 288:	80 33       	cpi	r24, 0x30	; 48
 28a:	91 f7       	brne	.-28     	; 0x270 <main+0x22>
			
			DIO_voidSetPinValue(PORTC_ID,PIN7, PIN_LOW);
 28c:	40 e0       	ldi	r20, 0x00	; 0
 28e:	67 e0       	ldi	r22, 0x07	; 7
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 296:	ec cf       	rjmp	.-40     	; 0x270 <main+0x22>

00000298 <UART_Init>:

}
void UART_Send(u8 data)
{
	while(GET_BIT(UCSRA, 5) !=1 );
	UDR=data;
 298:	86 e8       	ldi	r24, 0x86	; 134
 29a:	80 bd       	out	0x20, r24	; 32
 29c:	83 e3       	ldi	r24, 0x33	; 51
 29e:	89 b9       	out	0x09, r24	; 9
 2a0:	8a b1       	in	r24, 0x0a	; 10
 2a2:	88 60       	ori	r24, 0x08	; 8
 2a4:	8a b9       	out	0x0a, r24	; 10
 2a6:	8a b1       	in	r24, 0x0a	; 10
 2a8:	80 61       	ori	r24, 0x10	; 16
 2aa:	8a b9       	out	0x0a, r24	; 10
 2ac:	8a b1       	in	r24, 0x0a	; 10
 2ae:	8b 7f       	andi	r24, 0xFB	; 251
 2b0:	8a b9       	out	0x0a, r24	; 10
 2b2:	08 95       	ret

000002b4 <UART_Receive>:
}
u8	 UART_Receive()
{
	while(GET_BIT(UCSRA,7) !=1 );
 2b4:	5f 9b       	sbis	0x0b, 7	; 11
 2b6:	fe cf       	rjmp	.-4      	; 0x2b4 <UART_Receive>
	return UDR;
 2b8:	8c b1       	in	r24, 0x0c	; 12
}
 2ba:	08 95       	ret

000002bc <_exit>:
 2bc:	f8 94       	cli

000002be <__stop_program>:
 2be:	ff cf       	rjmp	.-2      	; 0x2be <__stop_program>
